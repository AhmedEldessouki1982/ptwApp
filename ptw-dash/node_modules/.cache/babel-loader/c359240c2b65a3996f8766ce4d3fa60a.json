{"ast":null,"code":"var _jsxFileName = \"/home/eldessouki/Development/React/ptwApp/ptw-dash/src/components/navbar/Navbar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport SearchBar from '../SearchBar/SearchBar';\nimport { Box, IconButton, useTheme } from '@mui/material';\nimport { ColorModeContext, tokens } from '../theme/theme';\nimport DarkModeOutlinedIcon from '@mui/icons-material/DarkModeOutlined';\nimport LightModeOutlinedIcon from '@mui/icons-material/LightModeOutlined';\nimport AccountCircleOutlinedIcon from '@mui/icons-material/AccountCircleOutlined';\nimport NotificationsOutlinedIcon from \"@mui/icons-material/NotificationsOutlined\";\nimport SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Navbar() {\n  _s();\n\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  let themeToggle = React.useContext(ColorModeContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      width: \"100hv\",\n      height: \"3rem\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      sx: {\n        backgroundColor: colors.primary[500]\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mr: \"15px\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"warning\",\n          onClick: () => {\n            themeToggle.toggleColorMode();\n          },\n          children: theme.palette.mode === \"dark\" ? /*#__PURE__*/_jsxDEV(DarkModeOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 62\n          }, this) : /*#__PURE__*/_jsxDEV(LightModeOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 90\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"warning\",\n          children: /*#__PURE__*/_jsxDEV(AccountCircleOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"warning\",\n          children: /*#__PURE__*/_jsxDEV(NotificationsOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"warning\",\n          children: /*#__PURE__*/_jsxDEV(SettingsOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Navbar, \"SZCJ9ZgKnuHgFp43v72CjLRLZJw=\", false, function () {\n  return [useTheme];\n});\n\n_c = Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","SearchBar","Box","IconButton","useTheme","ColorModeContext","tokens","DarkModeOutlinedIcon","LightModeOutlinedIcon","AccountCircleOutlinedIcon","NotificationsOutlinedIcon","SettingsOutlinedIcon","Navbar","theme","colors","palette","mode","themeToggle","useContext","backgroundColor","primary","toggleColorMode"],"sources":["/home/eldessouki/Development/React/ptwApp/ptw-dash/src/components/navbar/Navbar.jsx"],"sourcesContent":["import React from 'react';\nimport SearchBar from '../SearchBar/SearchBar';\nimport {Box, IconButton, useTheme} from '@mui/material';\nimport { ColorModeContext, tokens } from '../theme/theme';\nimport DarkModeOutlinedIcon from '@mui/icons-material/DarkModeOutlined';\nimport LightModeOutlinedIcon from '@mui/icons-material/LightModeOutlined';\nimport AccountCircleOutlinedIcon from '@mui/icons-material/AccountCircleOutlined';\nimport NotificationsOutlinedIcon from \"@mui/icons-material/NotificationsOutlined\";\nimport SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\n\nexport default function Navbar () {\n    const theme = useTheme();\n    const colors = tokens(theme.palette.mode);\n    let themeToggle = React.useContext(ColorModeContext);\n    return (\n        <>\n            <Box display={\"flex\"} width = {\"100hv\"} height = {\"3rem\"} justifyContent = {\"space-between\"} alignItems = {\"center\"}\n            sx = {{\n                backgroundColor: colors.primary[500]\n            }}>\n\n            {/* search box */}\n                <Box>\n                    \n                </Box>\n                \n            {/* icon box */}\n                <Box mr = \"15px\">\n                    <IconButton color = \"warning\" onClick={()=>{themeToggle.toggleColorMode()}}>\n                        {\n                            theme.palette.mode === \"dark\" ? (<DarkModeOutlinedIcon/>) : (<LightModeOutlinedIcon/>)\n                        }\n                    </IconButton>\n\n                    <IconButton color = \"warning\">\n                       <AccountCircleOutlinedIcon />\n                    </IconButton>\n\n                    <IconButton color = \"warning\">\n                       <NotificationsOutlinedIcon />\n                    </IconButton>\n\n                    <IconButton color = \"warning\">\n                       <SettingsOutlinedIcon />\n                    </IconButton>\n                </Box>\n\n            </Box>\n        </>\n    )\n}\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAAQC,GAAR,EAAaC,UAAb,EAAyBC,QAAzB,QAAwC,eAAxC;AACA,SAASC,gBAAT,EAA2BC,MAA3B,QAAyC,gBAAzC;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,yBAAP,MAAsC,2CAAtC;AACA,OAAOC,yBAAP,MAAsC,2CAAtC;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;;;AAEA,eAAe,SAASC,MAAT,GAAmB;EAAA;;EAC9B,MAAMC,KAAK,GAAGT,QAAQ,EAAtB;EACA,MAAMU,MAAM,GAAGR,MAAM,CAACO,KAAK,CAACE,OAAN,CAAcC,IAAf,CAArB;EACA,IAAIC,WAAW,GAAGjB,KAAK,CAACkB,UAAN,CAAiBb,gBAAjB,CAAlB;EACA,oBACI;IAAA,uBACI,QAAC,GAAD;MAAK,OAAO,EAAE,MAAd;MAAsB,KAAK,EAAI,OAA/B;MAAwC,MAAM,EAAI,MAAlD;MAA0D,cAAc,EAAI,eAA5E;MAA6F,UAAU,EAAI,QAA3G;MACA,EAAE,EAAI;QACFc,eAAe,EAAEL,MAAM,CAACM,OAAP,CAAe,GAAf;MADf,CADN;MAAA,wBAMI,QAAC,GAAD;QAAA;QAAA;QAAA;MAAA,QANJ,eAWI,QAAC,GAAD;QAAK,EAAE,EAAG,MAAV;QAAA,wBACI,QAAC,UAAD;UAAY,KAAK,EAAG,SAApB;UAA8B,OAAO,EAAE,MAAI;YAACH,WAAW,CAACI,eAAZ;UAA8B,CAA1E;UAAA,UAEQR,KAAK,CAACE,OAAN,CAAcC,IAAd,KAAuB,MAAvB,gBAAiC,QAAC,oBAAD;YAAA;YAAA;YAAA;UAAA,QAAjC,gBAA6D,QAAC,qBAAD;YAAA;YAAA;YAAA;UAAA;QAFrE;UAAA;UAAA;UAAA;QAAA,QADJ,eAOI,QAAC,UAAD;UAAY,KAAK,EAAG,SAApB;UAAA,uBACG,QAAC,yBAAD;YAAA;YAAA;YAAA;UAAA;QADH;UAAA;UAAA;UAAA;QAAA,QAPJ,eAWI,QAAC,UAAD;UAAY,KAAK,EAAG,SAApB;UAAA,uBACG,QAAC,yBAAD;YAAA;YAAA;YAAA;UAAA;QADH;UAAA;UAAA;UAAA;QAAA,QAXJ,eAeI,QAAC,UAAD;UAAY,KAAK,EAAG,SAApB;UAAA,uBACG,QAAC,oBAAD;YAAA;YAAA;YAAA;UAAA;QADH;UAAA;UAAA;UAAA;QAAA,QAfJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAoCH;;GAxCuBJ,M;UACNR,Q;;;KADMQ,M"},"metadata":{},"sourceType":"module"}